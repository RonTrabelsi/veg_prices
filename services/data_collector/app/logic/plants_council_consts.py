""" Consts for the scraper """

from enum import Enum
from typing import Dict

# Plants Council website URL
PLANTS_COUNCIL_WEBSITE_URL: str = 'http://plants.moonsitesoftware.co.il/index.aspx'

# Request variables fields names
class RequestFields(Enum):
    VEGETABLE_NAME = 'ctl02$Name'
    START_DATE = 'ctl02$FromDate$dateInput'
    END_DATE = 'ctl02$ToDate'
    PAGE_NUMBER = 'ctl02$PricesViewPagination__CurrentPage'


# Request data
REQUEST_DATA: Dict[str, str] = {
    '__EVENTTARGET': 'ctl02$Search',
    '__VIEWSTATE': '',
    RequestFields.VEGETABLE_NAME.value: 'עגבניות שרי אשכולות אכות מעולה',
    RequestFields.START_DATE.value: '2020-05-30-00-00-00',
    RequestFields.END_DATE.value: '2023-05-30',
    RequestFields.PAGE_NUMBER.value: '1',
}

# Date format for the start date in the prices request
REQUEST_START_DATE_FORMAT: str = "%Y-%m-%d-%H-%M-%S"

# Date format for the end date in the prices request
REQUEST_END_DATE_FORMAT: str = "%Y-%m-%d"

# Date format of the respone
RESPONSE_DATE_FORMAT: str = "%d/%m/%y"

LOG_DATE_FORMAT: str = "%d/%m/%Y"

# Regex Pattern to extract the prices table from the response HTML
PRICES_TABLE_PATTERN: str = r'<tbody>\\r\\n\\t<tr class="rgRow tblPricesCells" id="ctl02_RadGrid1_ctl00__0" style="text-align:right;">(.*?)</tbody>\\r\\n\\r\\n</table>'

# Regex Pattern to extract the date from prices table row
ROW_DATE_PATTERN: str = r'<td style="width:115px;">(\d{2}/\d{2}/\d{2})</td>'

# Regex Pattern to extract regular price from prices table row
ROW_REGULAR_PRICE_PATTERN: str = r'<td style="width:115px;">.*?</td><td class="productName" style="width:249px;">.*?</td><td style="width:115px;">.*?(\d{1,2}\.\d{2})'

# Regex Pattern to extract speical price from prices table row
ROW_SPECIAL_PRICE_PATTERN: str = r'<td style="width:115px;">.*?</td><td class="productName" style="width:249px;">.*?</td><td style="width:115px;">.*?</td><td style="width:115px;">.*?(\d{1,2}\.\d{2})'

# The HTML delimeter between rows
ROWS_DELIMITER: str = "</tr>"
